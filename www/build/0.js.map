{"version":3,"sources":["../../src/pages/register/register.module.ts","../../src/pages/register/register.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACC;AACM;AAahD,IAAa,kBAAkB;IAA/B;IAAiC,CAAC;IAAD,yBAAC;AAAD,CAAC;AAArB,kBAAkB;IAX9B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,+DAAY;SACb;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,+DAAY,CAAC;SACvC;QACD,OAAO,EAAE;YACP,+DAAY;SACb;KACF,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;ACfW;AACmD;AACpC;AAUzD,IAAa,YAAY;IAIvB,sBAAmB,GAAkB,EAAS,EAAe,EAAS,WAA8B,EAAS,SAA0B;QAApH,QAAG,GAAH,GAAG,CAAe;QAAS,OAAE,GAAF,EAAE,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAmB;QAAS,cAAS,GAAT,SAAS,CAAiB;QAFhI,oBAAe,GAAQ,kBAAkB,CAAC;QAI7C,IAAI,YAAY,GAAG,mGAAmG,CAAC;QAEvH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,KAAK,CAAC;YACvB,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACxF,WAAW,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrF,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC/E,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAEvF,CAAC,CAAC;IAEP,CAAC;IAED,mCAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACpC,CAAC;QAAC,IAAI,CAAC,CAAC;YAEN,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACzC,OAAO,EAAE,UAAU;gBACnB,OAAO,EAAE,YAAY;aACtB,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC9B,yBAAyB;YAE1B;;;;;;;;;;;;kBAYM;QAEP,CAAC;IACH,CAAC;IACD,mCAAY,GAAZ,UAAa,KAAK;QAChB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,CAAC,IAAI,CAAC;SAChB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IACH,mBAAC;AAAD,CAAC;AAvDY,YAAY;IALxB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;OACG;KAC7B,CAAC;iBAKuI;AAmDxI;SAvDY,YAAY,e","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RegisterPage } from './register';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(RegisterPage),\r\n  ],\r\n  exports: [\r\n    RegisterPage\r\n  ]\r\n})\r\nexport class RegisterPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, LoadingController, AlertController } from 'ionic-angular';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n\n\n\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html'\n})\nexport class RegisterPage {\n  public registerForm;\n  public backgroundImage: any = \"./assets/bg2.jpg\";\n\n  constructor(public nav: NavController, public fb: FormBuilder, public loadingCtrl: LoadingController, public alertCtrl: AlertController) {\n    \n      let EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n      \n      this.registerForm = fb.group({\n            email: ['', Validators.compose([Validators.required, Validators.pattern(EMAIL_REGEXP)])],\n            profileName: ['', Validators.compose([Validators.minLength(2), Validators.required])],\n            phone: ['', Validators.compose([Validators.minLength(6), Validators.required])],\n            password: ['', Validators.compose([Validators.minLength(6), Validators.required])],\n\n      });\n  \n  }\n\n  registerUser(){\n    console.log(\"call signopUser\");\n    if (!this.registerForm.valid){\n      console.log(this.registerForm.value);\n      this.presentAlert(\"invalid form\");\n    } else {\n\n      let loadingPopup = this.loadingCtrl.create({\n        spinner: 'crescent', \n        content: 'Creating..'\n      });\n      this.nav.setRoot('LoginPage');\n      //loadingPopup.present();\n\n     /* this.authData.registerUser(\n          this.registerForm.value.profileName, \n          this.registerForm.value.email, \n          this.registerForm.value.password,\n          this.registerForm.value.phone)\n      .then(() => {\n          loadingPopup.dismiss();\n          this.nav.setRoot('AfterLoginPage');\n      }, (error) => { \n         var errorMessage: string = error.message;\n          loadingPopup.dismiss();\n          this.presentAlert(errorMessage);      \n      });*/\n\n    }\n  }\n  presentAlert(title) {\n    let alert = this.alertCtrl.create({\n      title: title,\n      buttons: ['OK']\n    });\n    alert.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts"],"sourceRoot":""}